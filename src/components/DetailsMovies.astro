---
import { type Credits, type Cast } from "@/types/apiCreditsMovie.ts";
import CategoriesButtons from "./CategoriesButtons.astro";
import ExtraDetailsMovie from "./ExtraDetailsMovie.astro";
import VideoButton from "./VideoButton.astro";
import { getDetailsMovie } from "@/services/getDetailsMovie";
import NotFound from "@/assets/svg/notFound.svg";

interface Props {
  movieId: string;
  img: string;
  title: string;
  average: string;
  alt: string;
  overview: string;
  runtime: string;
  genres: Object[];
}

const { movieId, img, title, average, alt, overview, runtime, genres } =
  Astro.props;

const credits = await getDetailsMovie(movieId, "/credits");

function getMostPopularDirector(credits: Credits) {
  let directors = credits.crew.filter(
    (crew: Cast) => crew && crew.department === "Directing"
  );

  if (directors.length > 0) {
    return directors.sort((a, b) => b.popularity - a.popularity);
  } else {
    return [];
  }
}
---

<section id="movie" class="bg-bg-300 h-auto w-full flex flex-col md:flex-row">
  {
    img.includes("null") ? (
      <div
        aria-label="Image no found"
        role="img"
        class="w-full min-h-[600px] poster-img flex flex-col items-center justify-center gap-4 md:max-w-[400px]"
      >
        <p class="text-lg md:text-xl xl:text-2xl font-extrabold">
          Image no found
        </p>
        <NotFound class="size-24" aria-hidden="true" />
      </div>
    ) : (
      <img
        src={`https://image.tmdb.org/t/p/w400${img}`}
        alt={alt}
        class="poster-img w-full object-cover md:max-w-[400px]"
      />
    )
  }
  <div
    class="flex flex-col justify-between p-4 gap-10 md:w-10/12 md:justify-start md:p-6"
  >
    <div class="flex flex-col gap-3">
      <h2 class="text-4xl font-bold">
        {title}
      </h2>
      <ExtraDetailsMovie
        movieId={movieId}
        average={average}
        runtime={runtime}
      />
      <div class="flex flex-wrap gap-1">
        {
          genres.map((genre: any) => {
            return <CategoriesButtons id={genre.id} text={genre.name} />;
          })
        }
      </div>
    </div>
    <div class="flex flex-col gap-3">
      <h3 class="text-2xl font-bold">Overview</h3>
      <p class="text-lg">{overview}</p>
    </div>
    <div class="flex flex-col gap-3">
      <h3 class="text-2xl font-bold">Director</h3>
      <p class="text-lg">
        {credits ? getMostPopularDirector(credits)[0].name : "unknown"}
      </p>
    </div>
    <VideoButton movieId={movieId || ""} />
  </div>
</section>
