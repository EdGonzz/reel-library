---
import { type Credits, type Cast } from "@/types/apiCreditsMovie";
import { getDetailsMovie } from "@/services/getDetailsMovie";

interface Props {
  movieId: string;
}

const { movieId } = Astro.props;

const credits = (await getDetailsMovie(movieId, "/credits")) as Credits;

function getTopBilledCast(credits: Credits) {
  let cast = credits.cast.filter(
    (cast: Cast) => cast && cast.order !== undefined && cast.order < 6
  );

  if (cast.length > 0) {
    return cast.sort((a, b) => b.popularity - a.popularity);
  } else {
    return [];
  }
}

const topBilledCast = getTopBilledCast(credits);
---

<section class="flex flex-col gap-5 bg-bg-300 px-4 md:px-6">
  <h3 class="text-2xl font-bold">Top Billed Cast</h3>
  <div
    class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4 pb-4"
  >
    {
      topBilledCast.map((actor: Cast) => {
        return (
          <div class="flex flex-col items-center text-center">
            {actor?.profile_path === null ? (
              <div
                aria-label="Image no found"
                role="img"
                class="size-24 rounded-full poster-img flex flex-col items-center justify-center"
              >
                <span class="text-lg font-extrabold">Image no found</span>
              </div>
            ) : (
              <img
                class="lazy poster-img size-24 object-cover rounded-full"
                data-src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}
                alt={actor.name}
              />
            )}
            <h3 class="text-lg font-bold">{actor.name}</h3>
            <p class="text-sm">{actor.character}</p>
          </div>
        );
      })
    }
  </div>
</section>

<script>
  import { setUpLazyLoad } from "@/services/lazyLoad";

  document.addEventListener("astro:page-load", setUpLazyLoad);

  setUpLazyLoad();
</script>
