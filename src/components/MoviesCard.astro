---
import Star from "@/assets/svg/Star.svg";
import NotFound from "@/assets/svg/notFound.svg";
import Heart from "@/assets/svg/Heart.svg";

interface Props {
  id: number;
  title: string;
  image: string;
  average: number;
  releaseDate: Date;
}

const { id, title, image, average, releaseDate } = Astro.props;

function getYear(releaseDate: Date) {
  if (releaseDate) {
    let date = new Date(releaseDate);
    let year = date.getUTCFullYear();

    return year;
  }
}
---

<article class="space-y-2">
  <a
    class="embla__slide rounded-2xl hover:shadow-2xl hover:scale-105 transition-all"
    href={`/movie/${id}`}
    data-id={id}
  >
    <picture class="h-full w-full">
      {
        image.includes("null") ? (
          <div
            aria-label="Image no found"
            role="img"
            class="w-full h-full rounded-2xl poster-img flex flex-col items-center justify-center gap-4"
          >
            <span class="text-lg md:text-xl xl:text-2xl font-extrabold">
              Image no found
            </span>
            <NotFound class="size-24" aria-hidden="true" />
          </div>
        ) : (
          <img
            class="lazy poster-img embla__slide__img"
            data-src={image}
            alt={title}
          />
        )
      }
    </picture>
    <button
      class="absolute top-2 right-2 flex justify-center items-center size-8 rounded-full transition-colors bg-black/30 text-white hover:bg-black/50"
      data-id={id}
    >
      <Heart class="size-5" />
    </button>
    <header
      class="absolute bottom-0 bg-black/70 p-2 text-white md:pl-4 w-full rounded-b-2xl mask-top"
    >
      <div class="w-auto flex flex-row gap-2 items-center">
        <Star class="w-4 h-4 text-yellow-400 md:w-5 md:h-5" />
        <p class="embla__slide__average">{`${(average ?? 0).toFixed(1)}`}</p>
      </div>
    </header>
  </a>
  <header class="flex flex-col">
    <h2 class="embla__slide__title">{title}</h2>
    <p class="font-semibold text-black/40">{getYear(releaseDate)}</p>
  </header>
</article>

<script>
  import { setUpLazyLoad } from "@/services/lazyLoad";
  import { checkLocalStorage } from "@/services/checkLS";
  import { getLocalStorage } from "@/services/getLocalStorage";
  import { printMoviesFav } from "@/services/printerFavoriteSection";

  // Sincroniza todos los botones like con el mismo data-id
  function updateLikeButtons(movieId: string) {
    const buttons = document.querySelectorAll(`button[data-id='${movieId}']`);
    const isLiked = getLocalStorage()[`${movieId}`];
    buttons.forEach((btn) => {
      btn.classList.toggle("liked", isLiked);
    });
  }

  document.addEventListener("astro:page-load", () => {
    setUpLazyLoad();
    const likedButtons = document.querySelectorAll(
      "button[data-id]"
    ) as NodeListOf<HTMLButtonElement>;

    likedButtons.forEach((button) => {
      const id = button.getAttribute("data-id");
      if (!id) return;
      getLocalStorage()[`${id}`]
        ? button.classList.add("liked")
        : button.classList.remove("liked");

      button.addEventListener("click", async (e) => {
        e.preventDefault();
        e.stopPropagation();
        await checkLocalStorage(`${id}`);
        updateLikeButtons(id);
        printMoviesFav(getLocalStorage(), true);
      });
    });
  });
</script>
